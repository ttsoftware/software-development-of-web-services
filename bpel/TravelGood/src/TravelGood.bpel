<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="TravelGood"
    targetNamespace="http://enterprise.netbeans.org/bpel/TravelGood/TravelGood"
    xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGood/TravelGood"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://services/" xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions">
    <import namespace="http://enterprise.netbeans.org/bpel/TravelGoodWrapper" location="TravelGoodWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://services/" location="TravelGood.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/HotelServiceWrapper" location="HotelServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://services/" location="HotelService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/AirlineServiceWrapper" location="AirlineServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://services/" location="AirlineService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://services/" location="http://sterling:8080/webservices/TravelAgencySoapService?xsd=2" importType="http://www.w3.org/2001/XMLSchema"/>
    <partnerLinks>
        <partnerLink name="AirlineServiceLink" xmlns:tns="http://enterprise.netbeans.org/bpel/AirlineServiceWrapper" partnerLinkType="tns:AirlineInterfaceLinkType" partnerRole="AirlineInterfaceRole"/>
        <partnerLink name="HotelServiceLink" xmlns:tns="http://enterprise.netbeans.org/bpel/HotelServiceWrapper" partnerLinkType="tns:HotelInterfaceLinkType" partnerRole="HotelInterfaceRole"/>
        <partnerLink name="TravelGood" xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGoodWrapper" partnerLinkType="tns:TravelAgencySoapInterfaceLinkType" myRole="TravelAgencySoapInterfaceRole"/>
    </partnerLinks>
    <variables>
        <variable name="Itinerary" messageType="ns0:getItineraryResponse">
            <sxed:editor>
                <sxed:predicate path="$Itinerary.itinerary/bookings[count(.)]" source="to"/>
                <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="to"/>
                <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
            </sxed:editor>
        </variable>
        <variable name="createItineraryOut" messageType="ns0:createItineraryResponse"/>
        <variable name="getHotelsOut" messageType="ns0:getHotelsResponseTravelGood"/>
        <variable name="getHotelsIn" messageType="ns0:getHotelsTravelGood"/>
        <variable name="getHotelsServiceIn" messageType="ns0:getHotels"/>
        <variable name="getHotelsServiceOut" messageType="ns0:getHotelsResponse"/>
        <variable name="getFlightsIn" messageType="ns0:getFlightsTravelGood"/>
        <variable name="getFlightsOut" messageType="ns0:getFlightsResponseTravelGood"/>
        <variable name="getFlightsServiceIn" messageType="ns0:getFlights"/>
        <variable name="getFlightsServiceOut" messageType="ns0:getFlightsResponse"/>
        <variable name="createBookingIn" messageType="ns0:createBookingTravelGood"/>
        <variable name="createBookingOut" messageType="ns0:createBookingResponseTravelGood"/>
        <variable name="bookItinerarie" messageType="ns0:bookItinerarie"/>
        <variable name="bookHotelServiceIn" messageType="ns0:bookHotel"/>
        <variable name="bookHotelServiceOut" messageType="ns0:bookHotelResponse"/>
        <variable name="bookFlightServiceIn" messageType="ns0:bookFlight"/>
        <variable name="bookFlightServiceOut" messageType="ns0:bookFlightResponse"/>
    </variables>
    <sequence>
        <sequence name="Sequence1">
            <receive name="Receive1" createInstance="yes" partnerLink="TravelGood" operation="createItinerary" xmlns:tns="http://j2ee.netbeans.org/wsdl/TravelGood/src/travelGood" portType="ns0:TravelAgencySoapInterface"/>
            <assign name="Assign1">
                <copy>
                    <from>number(sxxf:getBPId())</from>
                    <to>$Itinerary.itinerary/id</to>
                </copy>
            </assign>
            <assign name="Assign6">
                <copy>
                    <from>$Itinerary.itinerary/id</from>
                    <to variable="createItineraryOut" part="return"/>
                </copy>
            </assign>
            <reply name="Reply1" partnerLink="TravelGood" operation="createItinerary" xmlns:tns="http://j2ee.netbeans.org/wsdl/TravelGood/src/travelGood" portType="ns0:TravelAgencySoapInterface" variable="createItineraryOut"/>
        </sequence>
        <sequence name="Sequence2">
            <receive name="Receive2" partnerLink="TravelGood" operation="getHotels" portType="ns0:TravelAgencySoapInterface" createInstance="no" variable="getHotelsIn"/>
            <assign name="Assign2">
                <copy>
                    <from variable="getHotelsIn" part="city"/>
                    <to variable="getHotelsServiceIn" part="city"/>
                </copy>
                <copy>
                    <from variable="getHotelsIn" part="arrivalDate"/>
                    <to variable="getHotelsServiceIn" part="arrivalDate"/>
                </copy>
                <copy>
                    <from variable="getHotelsIn" part="departureDate"/>
                    <to variable="getHotelsServiceIn" part="departureDate"/>
                </copy>
            </assign>
            <invoke name="Invoke1" partnerLink="HotelServiceLink" operation="getHotels" portType="ns0:HotelInterface" inputVariable="getHotelsServiceIn" outputVariable="getHotelsServiceOut"/>
            <assign name="Assign5">
                <copy>
                    <from variable="getHotelsServiceOut" part="hotels"/>
                    <to variable="getHotelsOut" part="hotels"/>
                </copy>
            </assign>
            <reply name="Reply2" partnerLink="TravelGood" operation="getHotels" portType="ns0:TravelAgencySoapInterface" variable="getHotelsOut"/>
        </sequence>
        <sequence name="Sequence3">
            <receive name="Receive3" partnerLink="TravelGood" operation="getFlights" portType="ns0:TravelAgencySoapInterface" createInstance="no" variable="getFlightsIn"/>
            <assign name="Assign3">
                <copy>
                    <from variable="getFlightsIn" part="from"/>
                    <to variable="getFlightsServiceIn" part="from"/>
                </copy>
                <copy>
                    <from variable="getFlightsIn" part="destination"/>
                    <to variable="getFlightsServiceIn" part="destination"/>
                </copy>
                <copy>
                    <from variable="getFlightsIn" part="date"/>
                    <to variable="getFlightsServiceIn" part="date"/>
                </copy>
            </assign>
            <invoke name="Invoke2" partnerLink="AirlineServiceLink" operation="getFlights" portType="ns0:AirlineInterface" inputVariable="getFlightsServiceIn" outputVariable="getFlightsServiceOut"/>
            <assign name="Assign4">
                <copy>
                    <from variable="getFlightsServiceOut" part="flightRevervations"/>
                    <to variable="getFlightsOut" part="FlightReservation"/>
                </copy>
            </assign>
            <reply name="Reply3" partnerLink="TravelGood" operation="getFlights" portType="ns0:TravelAgencySoapInterface" variable="getFlightsOut"/>
        </sequence>
        <sequence name="Sequence4">
            <receive name="Receive4" partnerLink="TravelGood" operation="createBooking" portType="ns0:TravelAgencySoapInterface" createInstance="no" variable="createBookingIn"/>
            <assign name="Assign7">
                <copy>
                    <from variable="createBookingIn" part="booking"/>
                    <to>$Itinerary.itinerary/bookings</to>
                </copy>
                <copy>
                    <from>true()</from>
                    <to variable="createBookingOut" part="return"/>
                </copy>
            </assign>
            <reply name="Reply4" partnerLink="TravelGood" operation="createBooking" portType="ns0:TravelAgencySoapInterface" variable="createBookingOut"/>
        </sequence>
        <sequence name="Sequence5">
            <receive name="Receive5" partnerLink="TravelGood" operation="bookItinerarie" portType="ns0:TravelAgencySoapInterface" createInstance="no" variable="bookItinerarie"/>
            <forEach name="ForEach1" parallel="no" counterName="ForEach1Counter">
                <startCounterValue>0</startCounterValue>
                <finalCounterValue>count($Itinerary.itinerary/bookings)</finalCounterValue>
                <scope name="Scope1">
                    <variables>
                        <variable name="ifBooking" type="ns0:Booking"/>
                    </variables>
                    <sequence name="Sequence6">
                        <assign name="Assign8">
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/id
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/id</to>
                            </copy>
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/bookingStatus
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/bookingStatus</to>
                            </copy>
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/bookingType
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/bookingType</to>
                            </copy>
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/bookingNumber
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/bookingNumber</to>
                            </copy>
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/price
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/price</to>
                            </copy>
                            <copy>
                                <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/date
                                    <sxed:editor>
                                        <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                    </sxed:editor>
                                </from>
                                <to>$ifBooking/date</to>
                            </copy>
                        </assign>
                        <if name="If1">
                            <condition>contains('HOTEL', $Itinerary.itinerary/bookings[$ForEach1Counter]/bookingType)
                                <sxed:editor>
                                    <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                </sxed:editor>
                            </condition>
                            <sequence name="Sequence7">
                                <assign name="Assign9">
                                    <copy>
                                        <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/bookingNumber
                                            <sxed:editor>
                                                <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                            </sxed:editor>
                                        </from>
                                        <to>$bookHotelServiceIn.hotelBookingRequest/bookingNumber</to>
                                    </copy>
                                    <copy>
                                        <from>$bookItinerarie.cardInformation/number</from>
                                        <to>$bookHotelServiceIn.hotelBookingRequest/creditCardInformation/number</to>
                                    </copy>
                                    <copy>
                                        <from>$bookItinerarie.cardInformation/name</from>
                                        <to>$bookHotelServiceIn.hotelBookingRequest/creditCardInformation/name</to>
                                    </copy>
                                    <copy>
                                        <from>$bookItinerarie.cardInformation/expirationDate/month</from>
                                        <to>$bookHotelServiceIn.hotelBookingRequest/creditCardInformation/expirationMonth</to>
                                    </copy>
                                    <copy>
                                        <from>$bookItinerarie.cardInformation/expirationDate/year</from>
                                        <to>$bookHotelServiceIn.hotelBookingRequest/creditCardInformation/expirationYear</to>
                                    </copy>
                                </assign>
                                <invoke name="Invoke3" partnerLink="HotelServiceLink" operation="bookHotel" portType="ns0:HotelInterface" inputVariable="bookHotelServiceIn" outputVariable="bookHotelServiceOut"/>
                            </sequence>
                            <else>
                                <sequence name="Sequence8">
                                    <assign name="Assign10">
                                        <copy>
                                            <from>$bookItinerarie.cardInformation/expirationDate</from>
                                            <to>$bookFlightServiceIn.cardInformation/expirationDate</to>
                                        </copy>
                                        <copy>
                                            <from>$bookItinerarie.cardInformation/name</from>
                                            <to>$bookFlightServiceIn.cardInformation/name</to>
                                        </copy>
                                        <copy>
                                            <from>$bookItinerarie.cardInformation/number</from>
                                            <to>$bookFlightServiceIn.cardInformation/number</to>
                                        </copy>
                                        <copy>
                                            <from>$Itinerary.itinerary/bookings[$ForEach1Counter]/bookingNumber
                                                <sxed:editor>
                                                    <sxed:predicate path="$Itinerary.itinerary/bookings[$ForEach1Counter]" source="from"/>
                                                </sxed:editor>
                                            </from>
                                            <to variable="bookFlightServiceIn" part="bookingNumber"/>
                                        </copy>
                                    </assign>
                                    <invoke name="Invoke4" partnerLink="AirlineServiceLink" operation="bookFlight" portType="ns0:AirlineInterface" inputVariable="bookFlightServiceIn" outputVariable="bookFlightServiceOut"/>
                                </sequence>
                            </else>
                        </if>
                    </sequence>
                </scope>
            </forEach>
        </sequence>
    </sequence>
</process>
